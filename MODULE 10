ANSWER OF QNO 1
<style>
        .gallery {
        display: grid;
        grid-template-columns: repeat(3,1fr);
        grid-template-rows: repeat(3,1fr);
        gap: 10px;
                }
        .gallery img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
        }

        .img1{
            grid-column: 1/3;
        }

        .img3{
            grid-row: 2/4;
        }
        .img5{
                grid-column: 3/3;
                grid-row: 2/4;
        }

    </style>
</head>

<body>
    <div class="gallery">
  <img class="img1" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSoXHl2UjmAvokNGaiP4ujpBO_InZnXqdJb1Q&s" alt="Image 1">
  <img class="img2" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTXXhFYF9X5JsAaOhlezPG6aDInO99cz0g5_A&s" alt="Image 2">
  <img class="img3" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSuqPvkBi-vJ79ZQYwNZ9mvXoeGR_uoi1I_Fw&s" alt="Image 3">
  <img class="img4" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTBNwEjbRywN_IPzgo7lot7AE73OTkpGiYyZA&s" alt="Image 4">
  <img class="img5" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFp9CeBHgEatoU3-Nee4_GxhR7irES7KTWEg&simage 5" alt="">
  <img class="img6" src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRVeIGcabc2wHibK2hH7HaI2vNbZtPoEuLgVA&s" alt="image 6">
</div>

</body>
</html>
---------------------------------------------------------------------------------------------------------------------------------------    

ANSWER OF QNO 4
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .container{
            display: grid;
            border: 2px solid black;
           grid-template-columns: 100px 100px 100px 100px 100px 100px;
           grid-template-rows: 100px 100px;
           text-align: center;
           font-size: xx-large;
        }
        .box{
            border: 2px solid brown;
            border-radius: 10px;
            gap: 2px;
        }
        #b1{
            grid-row:2/3 ;
            grid-column: 2/1;
            background-color: rgb(28, 189, 189);
        }
        #b2{
            grid-row: 2/3;
            grid-column: 2/3;
            background-color: aquamarine;

        }
        #b3{
            grid-column: 1/2;
            grid-row: 1/2;
            background-color: rgb(28, 189, 189);

        }
        #b4{
            background-color: aquamarine;
        }
        #b5{
            background-color: rgb(28, 189, 189);
        }
        #b6{
            background-color: aquamarine;

        }
        #b7{
            background-color: rgb(28, 189, 189);

        }
        #b8{
            background-color: aquamarine;

        }
    </style>
</head>
<body>
    <div class="container">
        <div class="box" id="b1">1</div>
        <div class="box" id="b2">2</div>
        <div class="box" id="b3">3</div>
        <div class="box" id="b4">4</div>
        <div class="box" id="b5">5</div>
        <div class="box" id="b6">6</div>
        <div class="box" id="b7">7</div>
        <div class="box" id="b8">8</div> 
    </div>
</body>
</html>

ANSWER OF QNO 5
The properties `justify-items` and `justify-self` in CSS Grid are used to control horizontal alignment of grid items, but they differ in how and where they are applied.

The `justify-items` property is applied to the **grid container** and affects **all the child items** inside the grid. It defines how the content of each item is aligned horizontally within its grid cell. For example, if you set `justify-items: center;` on the grid container, all the items will be centered horizontally inside their respective grid cells. Other possible values include `start`, `end`, and `stretch`.
.grid-container {
  display: grid;
  grid-template-columns: 100px 100px;
  justify-items: center; /* centers all items horizontally */
  border: 2px solid #333;
}

.item {
  background-color: lightblue;
  padding: 10px;
}

On the other hand, `justify-self` is used on **individual grid items** to control their **own horizontal alignment** inside their cell. It overrides any `justify-items` setting from the container for that specific item. For instance, if you want one item to align to the right while others stay centered, you can apply `justify-self: end;` to just that item.

In summary, `justify-items` is used for **global alignment** of all items within a grid container, while `justify-self` allows for **fine-tuned, item-specific alignment**. Both are useful for controlling layout behavior in CSS Grid depending on whether you want uniform or custom alignment.
.grid-container {
  display: grid;
  grid-template-columns: 100px 100px;
}

.item {
  background-color: lightgreen;
  padding: 10px;
}

.item1 {
  justify-self: start;  /* aligns to left inside its cell */
}

.item2 {
  justify-self: end;    /* aligns to right inside its cell */
}
